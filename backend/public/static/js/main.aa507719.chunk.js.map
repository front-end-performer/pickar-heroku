{"version":3,"sources":["shared/UI/Spinner/Spinner.js","theme/theme.js","shared/Header.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","createMuiTheme","palette","primary","main","secondary","error","action","hover","common","lightBlue","inputBg","pink","transparent","typography","h1","fontWeight","fontSize","lineHeight","body2","textTransform","span","maxWidth","width","margin","useStyles","makeStyles","theme","root","flexGrow","position","appbar","backgroundColor","toolbar","padding","spacing","breakpoints","down","menuButton","marginRight","Header","classes","AppBar","elevation","Toolbar","variant","IconButton","edge","color","aria-label","src","alt","AsyncLandingPage","lazy","AsyncHistory","App","ThemeProvider","fallback","Spinner","exact","path","component","to","ReactDOM","render","document","getElementById"],"mappings":"+HAAA,0BAYeA,IARQ,SAACC,GACtB,OACE,yBAAKC,UAAS,UAAKD,EAAME,WAAa,6BACpC,yBAAKD,UAAU,qB,iMCENE,cAAe,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAK,GAAD,OAVI,YAYVC,UAAW,CACTD,KAAK,GAAD,OAZI,YAcVE,MAAO,CACLF,KAAK,GAAD,OAdG,YAgBTG,OAAQ,CACNC,MAAM,GAAD,OAjBE,YAmBTC,OAAQ,CACNC,UAAU,GAAD,OAnBG,WAoBZC,QAAQ,GAAD,OAnBG,WAoBVC,KAAK,GAAD,OAtBG,WAuBPC,YAAY,GAAD,OApBG,qBAuBlBC,WAAY,CACVC,GAAI,CACFC,WAAY,OACZC,SAAU,GACVC,WAAY,QAEdC,MAAO,CACLH,WAAY,OACZC,SAAU,OACVC,WAAY,OACZE,cAAe,QAEjBC,KAAM,CACJL,WAAY,SACZC,SAAU,UACVC,WAAY,OACZE,cAAe,SAGnBE,SAAU,CACRA,SAAU,KACVC,MAAO,OACPC,OAAQ,Y,wDC9CNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,SAAU,WACVP,MAAO,QAETQ,OAAQ,CACNC,gBAAiBL,EAAMzB,QAAQC,QAAQC,MAEzC6B,QAAQ,2BACHN,EAAML,UADJ,gBAELY,QAASP,EAAMQ,QAAQ,EAAG,IACzBR,EAAMS,YAAYC,KAAK,MAAQ,CAC9BH,QAASP,EAAMQ,QAAQ,EAAG,MAG9BG,WAAY,CACVC,YAAaZ,EAAMQ,QAAQ,QAyBhBK,EArBA,WACb,IAAMC,EAAUhB,IAEhB,OACE,yBAAK1B,UAAW0C,EAAQb,MACtB,kBAACc,EAAA,EAAD,CAAQZ,SAAS,SAAS/B,UAAW0C,EAAQV,OAAQY,UAAW,GAC9D,kBAACC,EAAA,EAAD,CAASC,QAAQ,QAAQ9C,UAAW0C,EAAQR,SAC1C,kBAACa,EAAA,EAAD,CACEC,KAAK,QACLhD,UAAW0C,EAAQH,WACnBU,MAAM,UACNC,aAAW,QAEX,yBAAKC,IAAI,iCAAiCC,IAAI,qBC3BpDC,EAAmBC,gBAAK,kBAAM,8DAC9BC,EAAeD,gBAAK,kBAAM,8DAmBjBE,EAjBH,WACV,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAe7B,MAAOA,GACpB,kBAAC,WAAD,CAAU8B,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC,kBAAC,IAAD,CAAUQ,GAAG,WCnBzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.aa507719.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Spinner.css';\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className='lds-dual-ring'></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst black = '#363A3E';\nconst white = '#ffffff';\nconst pink = '#FF4F54';\nconst lightBlue = '#EEF4F7';\nconst inputBg = '#EFF0F0';\nconst transparent = 'rgba(0,0,0,0.2)';\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: `${black}`,\n    },\n    secondary: {\n      main: `${white}`,\n    },\n    error: {\n      main: `${pink}`,\n    },\n    action: {\n      hover: `${pink}`,\n    },\n    common: {\n      lightBlue: `${lightBlue}`,\n      inputBg: `${inputBg}`,\n      pink: `${pink}`,\n      transparent: `${transparent}`,\n    },\n  },\n  typography: {\n    h1: {\n      fontWeight: 'bold',\n      fontSize: 40,\n      lineHeight: '47px',\n    },\n    body2: {\n      fontWeight: 'bold',\n      fontSize: '1rem',\n      lineHeight: '19px',\n      textTransform: 'none',\n    },\n    span: {\n      fontWeight: 'normal',\n      fontSize: '1.25rem',\n      lineHeight: '23px',\n      textTransform: 'none',\n    },\n  },\n  maxWidth: {\n    maxWidth: 1280,\n    width: '100%',\n    margin: '0 auto',\n  },\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: 'absolute',\n    width: '100%',\n  },\n  appbar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  toolbar: {\n    ...theme.maxWidth,\n    padding: theme.spacing(4, 4),\n    [theme.breakpoints.down('xs')]: {\n      padding: theme.spacing(4, 2),\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' className={classes.appbar} elevation={0}>\n        <Toolbar variant='dense' className={classes.toolbar}>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'\n          >\n            <img src='./assets/pickar_logo_white.png' alt='pickar logo' />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme/theme';\n\nimport Spinner from './shared/UI/Spinner/Spinner';\nimport Header from './shared/Header';\n\nconst AsyncLandingPage = lazy(() => import('./pages/LandingPage'));\nconst AsyncHistory = lazy(() => import('./pages/HistoryPage'));\n\nconst App = () => {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Suspense fallback={<Spinner />}>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={AsyncLandingPage} />\n            <Route exact path='/history' component={AsyncHistory} />\n            <Redirect to='/' />\n          </Switch>\n        </Suspense>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}